services:
  # Frontend React service with Nginx reverse proxy
  frontend:
    build:
      context: ./services/frontend
    ports:
      - "5173:5173"
    depends_on:
      - frontend-proxy
    networks:
      - shopverse-network
    restart: unless-stopped


  frontend-proxy:
    build:
      context: ./services/frontend
    ports:
      - "80:80"
    volumes:
      - ./services/frontend/nginx.conf:/etc/nginx/nginx.conf
      - ./services/frontend/dist:/usr/share/nginx/html
    depends_on:
      - product-service
      - cart-service
      - order-service
      - payment-service
      - notification-service
        #      - inventory-service
      - auth-service
    networks:
      - shopverse-network
    restart: unless-stopped

  # Backend Services
  product-service:
    image: shopverse-product
    build:
      context: ./services/product
    networks:
      - shopverse-network
    restart: unless-stopped
    env_file:
      - ./services/product/.env

  cart-service:
    image: shopverse-cart
    build:
      context: ./services/cart
    networks:
      - shopverse-network
    restart: unless-stopped
    env_file:
      - ./services/cart/.env  

  order-service:
    image: shopverse-order
    build:
      context: ./services/order
    networks:
      - shopverse-network
    restart: unless-stopped
    env_file:
      - ./services/order/.env 

  payment-service:
    image: shopverse-payment
    build:
      context: ./services/payment
    networks:
      - shopverse-network
    restart: unless-stopped

  notification-service:
    image: shopverse-notification
    build:
      context: ./services/notification
    networks:
      - shopverse-network
    restart: unless-stopped
    env_file:
      - ./services/notification/.env

        #  inventory-service:
        #image: shopverse-inventory
        #container_name: inventory-service
        #build:
        # context: ./services/inventory
        # networks:
        #  - shopverse-network
        # restart: unless-stopped

  auth-service:
    image: shopverse-auth
    build:
      context: ./services/auth
    networks:
      - shopverse-network
    restart: unless-stopped
    env_file:
      - ./services/auth/.env  

  # MongoDB service
  mongodb:
    image: mongo:4.4
    container_name: mongodb
    volumes:
      - mongodb-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - shopverse-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand('ping')"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

volumes:
  mongodb-data:  # Persistent data for MongoDB

networks:
  shopverse-network:
    driver: bridge
 
